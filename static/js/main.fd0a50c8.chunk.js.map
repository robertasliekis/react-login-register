{"version":3,"sources":["components/Header.js","actions/index.js","components/Login.js","components/Register.js","components/About.js","components/UserInfo.js","components/EditUserInfo.js","components/WrongPage.js","App.js","serviceWorker.js","reducers/addUserReducer.js","reducers/isLoggedInReducer.js","reducers/setUserIdReducer.js","reducers/allReducers.js","index.js"],"names":["Header","props","state","burgerClicked","handleClickBurger","bind","handleLogoClicked","currentBurgerMenuState","this","setState","prevProps","prevState","loginStatus","buttonClass","burgerClassName","className","onClick","to","style","display","isLoggedIn","transform","Component","connect","dispach","type","mapDispatchToProps","setActiveUser","userId","payload","users","addUser","onChange","useForm","register","handleSubmit","errors","useState","incorrectLogin","setIncorrectLogin","setEmailInput","userExist","history","useHistory","onSubmit","data","Object","values","forEach","user","index","email","password","push","htmlFor","e","target","value","name","placeholder","ref","required","pattern","message","opacity","getValues","setUserExist","userCreated","setUserCreated","sameUser","newUser","validate","repeat_password","About","dispatch","emailValue","updateUser","userUpdated","setUserUpdate","emailInput","id","newUserInfo","WrongPage","App","exact","path","component","Login","Register","UserInfo","EditUserInfo","React","Boolean","window","location","hostname","match","initialState","userAdder","action","concat","updatedUsers","setUserId","combineReducers","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.fd0a50c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { burgerClicked: false };\r\n    this.handleClickBurger = this.handleClickBurger.bind(this);\r\n    this.handleLogoClicked = this.handleLogoClicked.bind(this);\r\n  }\r\n\r\n  handleClickBurger() {\r\n    const currentBurgerMenuState = this.state.burgerClicked;\r\n    this.setState({ burgerClicked: !currentBurgerMenuState });\r\n  }\r\n\r\n  handleLogoClicked() {\r\n    this.setState({ burgerClicked: false });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.loginStatus !== prevProps.loginStatus) {\r\n      this.setState({ burgerClicked: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const buttonClass = this.props.loginStatus ? null : \"btn-last\";\r\n    let burgerClassName = this.state.burgerClicked ? \"burger-menu-clicked\" : null;\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"navbar\">\r\n          <Link className=\"logo-container\" onClick={this.handleLogoClicked} to=\"/\">\r\n            REACT LOGIN\r\n          </Link>\r\n          <div className=\"menu-buttons\">\r\n            <Link\r\n              className=\"btn btn-login\"\r\n              to=\"/react-login-register/\"\r\n              style={{ display: this.props.loginStatus ? \"none\" : \"flex\" }}\r\n            >\r\n              Login\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-register\"\r\n              to=\"/react-login-register/register\"\r\n              style={{ display: this.props.loginStatus ? \"none\" : \"flex\" }}\r\n            >\r\n              Register\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-user\"\r\n              to=\"/react-login-register/user\"\r\n              style={{ display: this.props.loginStatus ? \"flex\" : \"none\" }}\r\n            >\r\n              User Info\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-user-edit\"\r\n              to=\"/react-login-register/edit\"\r\n              style={{ display: this.props.loginStatus ? \"flex\" : \"none\" }}\r\n            >\r\n              Edit User\r\n            </Link>\r\n            <Link className={\"btn btn-about \" + buttonClass} to=\"/about\">\r\n              About\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-logout\"\r\n              to=\"/react-login-register/\"\r\n              style={{ display: this.props.loginStatus ? \"flex\" : \"none\" }}\r\n              onClick={() => this.props.isLoggedIn()}\r\n            >\r\n              Log Out\r\n            </Link>\r\n          </div>\r\n          <div className={\"burger-menu \" + burgerClassName} onClick={this.handleClickBurger}>\r\n            {/* <div className={\"burger-menu \"}> */}\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"sidebar\"\r\n          style={{\r\n            transform: this.state.burgerClicked ? \"translateX(0%)\" : \"translateX(-100%)\",\r\n          }}\r\n        >\r\n          <div className=\"menu-buttons\">\r\n            <Link\r\n              className=\"btn btn-login\"\r\n              onClick={this.handleClickBurger}\r\n              to=\"/react-login-register/\"\r\n              style={{ display: this.props.loginStatus ? \"none\" : \"flex\" }}\r\n            >\r\n              Login\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-register\"\r\n              onClick={this.handleClickBurger}\r\n              to=\"/react-login-register/register\"\r\n              style={{ display: this.props.loginStatus ? \"none\" : \"flex\" }}\r\n            >\r\n              Register\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-user\"\r\n              onClick={this.handleClickBurger}\r\n              to=\"/react-login-register/user\"\r\n              style={{ display: this.props.loginStatus ? \"flex\" : \"none\" }}\r\n            >\r\n              User Info\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-user-edit\"\r\n              onClick={this.handleClickBurger}\r\n              to=\"/react-login-register/edit\"\r\n              style={{ display: this.props.loginStatus ? \"flex\" : \"none\" }}\r\n            >\r\n              Edit User\r\n            </Link>\r\n            <Link\r\n              className={\"btn btn-about \" + buttonClass}\r\n              onClick={this.handleClickBurger}\r\n              to=\"/react-login-register/about\"\r\n            >\r\n              About\r\n            </Link>\r\n            <Link\r\n              className=\"btn btn-logout\"\r\n              onClick={this.handleClickBurger}\r\n              to=\"/react-login-register/\"\r\n              style={{ display: this.props.loginStatus ? \"flex\" : \"none\" }}\r\n              onClick={() => this.props.isLoggedIn()}\r\n            >\r\n              Log Out\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginStatus: state.isLoggedIn.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispach) => {\r\n  return {\r\n    isLoggedIn: () => dispach({ type: \"IS_LOGGED_IN\" }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","export const addUser = (user) => {\r\n  return {\r\n    type: \"REGISTER_USER\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const updateUser = (user) => {\r\n  return {\r\n    type: \"UPDATE_USER\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n  return {\r\n    type: \"IS_LOGGED_IN\",\r\n  };\r\n};\r\n\r\nexport const setActiveUser = (userId) => {\r\n  return {\r\n    type: \"SET_USER_ID\",\r\n    payload: userId,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { isLoggedIn, setActiveUser } from \"../actions\";\r\n\r\nfunction Login({ users, isLoggedIn, userId, setActiveUser, loginStatus, onChange }) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [incorrectLogin, setIncorrectLogin] = useState(false);\r\n\r\n  const [emailInput, setEmailInput] = useState(\"emailas\");\r\n\r\n  var userExist = false;\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (data) => {\r\n    Object.values(users).forEach((user, index) => {\r\n      if (user.email === data.email && user.password === data.password) {\r\n        userExist = true;\r\n        //    setUserId(index);\r\n        setActiveUser(user);\r\n        isLoggedIn();\r\n      }\r\n    });\r\n    if (userExist) {\r\n      setIncorrectLogin(false);\r\n      history.push(\"/user\");\r\n    } else {\r\n      setIncorrectLogin(true);\r\n    }\r\n  };\r\n\r\n  const emailValue = \"emailas\";\r\n\r\n  // function update(event) {\r\n  //   if (typeof onChange === \"function\") {\r\n  //     onChange(event.target.value);\r\n  //   }\r\n  // }\r\n\r\n  function update(e) {\r\n    setEmailInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\r\n      <h1 className=\"form-heading\">LOGIN</h1>\r\n      <div className=\"form-input\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            // name=\"email\"\r\n            // value={emailValue}\r\n            //value={emailInput}\r\n            onChange={update}\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={register({\r\n              required: \"*Email is required\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"*Invalid email address\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"error-message\">{errors.email && errors.email.message}</div>\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            ref={register({ required: \"*Password is required\" })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"error-message\">{errors.password && <p>{errors.password.message}</p>}</div>\r\n      </div>\r\n      <div className=\"message-container\">\r\n        <div className=\"error-message\" style={{ opacity: incorrectLogin ? 1 : 0 }}>\r\n          *Incorrect email or password\r\n        </div>\r\n      </div>\r\n      <button className=\"btn btn-submit\" type=\"submit\">\r\n        LOGIN\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.addUser.users,\r\n    setActiveUser: state.setActiveUser.userId,\r\n    loginStatus: state.isLoggedIn.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  isLoggedIn,\r\n  setActiveUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser, isLoggedIn } from \"../actions\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Register({ users, addUser }) {\r\n  const { register, handleSubmit, errors, getValues } = useForm();\r\n\r\n  const [userExist, setUserExist] = useState(false);\r\n  const [userCreated, setUserCreated] = useState(false);\r\n\r\n  const onSubmit = (data) => {\r\n    var sameUser = false;\r\n    Object.values(users).forEach((user) => {\r\n      if (user.email === data.email) {\r\n        setUserExist(true);\r\n        sameUser = true;\r\n      }\r\n    });\r\n\r\n    if (sameUser) {\r\n      sameUser = false;\r\n      setUserCreated(false);\r\n    } else {\r\n      setUserExist(false);\r\n      setUserCreated(true);\r\n      const newUser = { email: data.email, password: data.password };\r\n      addUser(newUser);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\r\n      <h1 className=\"form-heading\">REGISTER</h1>\r\n      <div className=\"form-input\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={register({\r\n              required: \"*Email is required\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"error-message\">{errors.email && errors.email.message}</div>\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            ref={register({ required: \"*Password is required\" })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"error-message\">{errors.password && <p>{errors.password.message}</p>}</div>\r\n      </div>\r\n      <div className=\"form-input\">\r\n        <div>\r\n          <label htmlFor=\"repeat_password\">Repeat Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"repeat_password\"\r\n            ref={register({\r\n              required: \"*Password is required\",\r\n              validate: (value) => {\r\n                if (value === getValues()[\"password\"]) {\r\n                  return true;\r\n                } else {\r\n                  return \"The passwords do not match\";\r\n                }\r\n              },\r\n            })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"error-message\">\r\n          {errors.repeat_password && <p> {errors.repeat_password.message}</p>}\r\n        </div>\r\n      </div>\r\n      <div className=\"message-container\">\r\n        <div className=\"error-message\" style={{ opacity: userExist ? 1 : 0 }}>\r\n          *User already exists\r\n        </div>\r\n        <div\r\n          className=\"error-message green-text user-create-message\"\r\n          style={{ opacity: userCreated ? 1 : 0 }}\r\n        >\r\n          User created successfully!\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"btn btn-submit\" type=\"submit\">\r\n        REGISTER\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.addUser.users,\r\n    loginStatus: state.isLoggedIn.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addUser,\r\n  isLoggedIn,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <h1>ABOUT</h1>\r\n        <p>Login/Register website made with React and Redux</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction UserInfo({ setActiveUser, loginStatus }) {\r\n  if (loginStatus) {\r\n    const emailValue = setActiveUser.email;\r\n    return (\r\n      <form className=\"form-container\">\r\n        <h1 className=\"form-heading\">USER INFO</h1>\r\n        <p>User {emailValue} is logged in</p>\r\n      </form>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>You have to log-in</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.addUser.users,\r\n  setActiveUser: state.setActiveUser.userId,\r\n  loginStatus: state.isLoggedIn.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { updateUser } from \"../actions\";\r\n\r\nfunction EditUserInfo({ users, setActiveUser, onChange, loginStatus, updateUser }) {\r\n  const { register, handleSubmit, getValues, errors } = useForm();\r\n\r\n  const [userUpdated, setUserUpdate] = useState(false);\r\n\r\n  const onSubmit = (data) => {\r\n    Object.values(users).forEach((user, index) => {\r\n      if (user.id === setActiveUser.id) {\r\n        let newUserInfo = {\r\n          index: index,\r\n          id: setActiveUser.id,\r\n          email: data.email,\r\n          password: data.password,\r\n        };\r\n        updateUser(newUserInfo);\r\n        setUserUpdate(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  let emailValue;\r\n  if (loginStatus) {\r\n    emailValue = setActiveUser.email;\r\n  } else {\r\n    emailValue = \"\";\r\n  }\r\n\r\n  const [emailInput, setEmailInput] = useState(emailValue);\r\n\r\n  function update(e) {\r\n    setEmailInput(e.target.value);\r\n  }\r\n\r\n  if (loginStatus) {\r\n    return (\r\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h1 className=\"form-heading\">EDIT USER INFO</h1>\r\n        <div className=\"form-input\">\r\n          <div>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              value={emailInput}\r\n              onChange={update}\r\n              name=\"email\"\r\n              ref={register({\r\n                required: \"*Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"error-message\">{errors.email && errors.email.message}</div>\r\n        </div>\r\n        <div className=\"form-input\">\r\n          <div>\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              ref={register({ required: \"*Password is required\" })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"error-message\">{errors.password && <p>{errors.password.message}</p>}</div>\r\n        </div>\r\n\r\n        <div className=\"form-input\">\r\n          <div>\r\n            <label htmlFor=\"repeat_password\">Repeat Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"repeat_password\"\r\n              ref={register({\r\n                required: \"*Password is required\",\r\n                validate: (value) => {\r\n                  if (value === getValues()[\"password\"]) {\r\n                    return true;\r\n                  } else {\r\n                    return \"The passwords do not match\";\r\n                  }\r\n                },\r\n              })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"error-message\">\r\n            {errors.repeat_password && <p> {errors.repeat_password.message}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"message-container\" style={{ opacity: userUpdated ? \"1\" : \"0\" }}>\r\n          <div className=\"error-message green-text\">Saved successfully</div>\r\n        </div>\r\n        <button className=\"btn btn-submit\" type=\"submit\">\r\n          SAVE\r\n        </button>\r\n      </form>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>You have to log-in</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.addUser.users,\r\n  setActiveUser: state.setActiveUser.userId,\r\n  loginStatus: state.isLoggedIn.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUserInfo);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class WrongPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Page does not exist</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WrongPage;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { connect } from \"react-redux\";\n\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport About from \"./components/About\";\nimport UserInfo from \"./components/UserInfo\";\nimport EditUserInfo from \"./components/EditUserInfo\";\nimport WrongPage from \"./components/WrongPage\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"website-wrapper\">\n            <Header />\n            <div className=\"main-content\">\n              <Switch>\n                <Route exact path=\"/react-login-register/\" component={Login} />\n                <Route path=\"/react-login-register/register\" component={Register} />\n                <Route path=\"/react-login-register/user\" component={UserInfo} />\n                <Route path=\"/react-login-register/edit\" component={EditUserInfo} />\n                <Route path=\"/react-login-register/about\" component={About} />\n                <Route path=\"*\" component={WrongPage} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loginStatus: state.isLoggedIn.isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  users: [\r\n    { id: \"id1\", email: \"user1@mail.com\", password: \"123\" },\r\n    {\r\n      id: \"id2\",\r\n      email: \"user2@mail.com\",\r\n      password: \"123\",\r\n    },\r\n    {\r\n      id: \"id3\",\r\n      email: \"123@123.lt\",\r\n      password: \"123\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst userAdder = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"REGISTER_USER\":\r\n      return { ...state, users: state.users.concat(action.payload) };\r\n    case \"UPDATE_USER\":\r\n      let updatedUsers = [...state.users];\r\n      updatedUsers[action.payload.index] = {\r\n        id: action.payload.id,\r\n        email: action.payload.email,\r\n        password: action.payload.password,\r\n      };\r\n      return { ...state, users: updatedUsers };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userAdder;\r\n","const initialState = {\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst isLoggedIn = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"IS_LOGGED_IN\":\r\n      return { ...state, isLoggedIn: !state.isLoggedIn };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isLoggedIn;\r\n","const initialState = {\r\n  userId: null,\r\n};\r\n\r\nconst setUserId = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_ID\":\r\n      return { ...state, userId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setUserId;\r\n","import { combineReducers } from \"redux\";\r\nimport addUser from \"./addUserReducer\";\r\nimport isLoggedIn from \"./isLoggedInReducer\";\r\nimport setUserId from \"./setUserIdReducer\";\r\n\r\nexport default combineReducers({\r\n  addUser: addUser,\r\n  isLoggedIn: isLoggedIn,\r\n  setActiveUser: setUserId,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/allReducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}